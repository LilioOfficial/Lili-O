# Overview
This project is used to implement a real time agent for multi-speaker environment base on an architecture we developped.


# Architecture


# Use Cases



## Quickstart / Installation

To get started, create a virtual environment and install the required packages by running the following commands:

```bash
# Create a virtual environment
python3 -m venv venv

# Activate the virtual environment
source venv/bin/activate  # On Windows use `venv\Scripts\activate`

# Install the required packages
pip install -r requirements.txt
```


## Run 
### Server mode

```bash
python main.py --mode online --port XXXX --host XXX.X.X.X
```

As we used mimi and did not want to focus on design, we used the already implemented moshi web interface. It stops after 10 seconds of inactivity sent to the server. 

### Meeting mode (join in a meeting)

First, change the meeting url and websocket url in **curl.sh**

Then run the following command:
```bash
bash curl.sh

python main.py --mode meeting --port XXXX --host XXX.X.X.X
```


## Roadmap
- [ ] Implement the turn taking model using Mili-O 


## License and Credits

- **Author**: [Ludovic Maitre]

- **Author**: [Léo Viguié]
MIT License - 2025
